openapi: 3.0.3
info:
  title: Songify - OpenAPI 3.0
  version: 0.0.1
  description: This is an API that allows you to do CRUD operations on artists, releases and recordings. 
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://localhost/api/v3 # de momento el servidor es local
externalDocs:
  description: Find out more about Songify
  url: https://github.com/rmerchanc/songify
tags:
  - name: artist
    description: Everything about artists
    externalDocs:
      description: Find out more about artists
      url: https://musicbrainz.org/doc/Artist
  - name: release
    description: Everything about releases
    externalDocs:
      description: Find out more about releases
      url: https://musicbrainz.org/doc/Release
  - name: recording
    description: Everything about recordings
    externalDocs:
      description: Find out more about recordings
      url: https://musicbrainz.org/doc/Recording
paths:
  /artist:
    get: 
      tags: 
        - artist
      summary: GET all the artists of the API
      description: Retreives all the information of the available artists
      responses: 
        '200': 
          description: All the information of the artists was successfully retreived
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/artists"
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags: 
        - artist
      summary: POST a new artist 
      description: Creates a new artist based on the information provided by the user
      requestBody:
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/artist"
      responses: 
        '201': 
          description: Created a new artist successfully based on the information provided
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/new_element"
        '400':
          description: Bad request performed by the client due to invalid parameters
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized request due to missing credentials 
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error' 
        '403':
          description: Fordibben access due to permanent restrictions
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /artist/{id}:
    parameters: 
      - $ref: "#/components/parameters/id"
    get:
      tags: 
        - artist
      summary: GET one artist of the API
      description: Retreives all the information of the specified artist
      responses: 
        '200': 
          description: All the information of the specified artist was successfully retreived
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/artist"
        '404':
          description: There is no artist with that identifier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags: 
        - artist
      summary: PUT one artist of the API
      description: Updates all or part of the information of the specified artist
      requestBody:
        required: true
        content: 
          application/json:
              schema: 
                $ref: "#/components/schemas/artist_update"
      responses: 
        '200': 
          description: All the information provided was successfully updated for the specified artist
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/new_element"
        '400':
          description: Bad request performed by the client due to invalid parameters
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized request due to missing credentials 
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error' 
        '403':
          description: Fordibben access due to permanent restrictions
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: There is no artist with that identifier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags: 
        - artist
      summary: DELETE one artist of the API
      description: Deletes all the information of the specified artist
      responses: 
        '200': 
          description: All the information provided was successfully deleted for the artist
        '401':
          description: Unauthorized request due to missing credentials 
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error' 
        '403':
          description: Fordibben access due to permanent restrictions
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: There is no artist with that identifier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'    
  /artist/{id}/release:
    parameters: 
      - $ref: "#/components/parameters/id"
    get:
      tags: 
        - release
      summary: GET all the releases from a specific artist of the API
      description: Retreives all the information of the available releases from an artist
      responses: 
        '200': 
          description: All the information of the releases from the specified artist was successfully retreived
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/releases"
        '404':
          description: There is no artist with that identifier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error" 
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags: 
        - release
      summary: POST a new release from an artist 
      description: Creates a new release from an artist based on the information provided by the user
      requestBody:
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/release"
      responses: 
        '201': 
          description: Created a new release successfully based on the information provided
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/new_element"
        '400':
          description: Bad request performed by the client due to invalid parameters
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized request due to missing credentials 
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error' 
        '403':
          description: Fordibben access due to permanent restrictions
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: There is no artist with that identifier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /artist/{id}/release/{id}:
    parameters: 
      - $ref: "#/components/parameters/id"
    get:
      tags: 
        - release
      summary: GET one artist's release of the API
      description: Retreives all the information of the specified artist's release
      responses: 
        '200': 
          description: All the information of the specified artist's release was successfully retreived
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/release"
        '404':
          description: There is no artist / release with that identifier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags: 
        - release
      summary: PUT one artist's release of the API
      description: Updates all or part of the information of the specified artist's release
      requestBody:
        required: true
        content: 
          application/json:
              schema: 
                $ref: "#/components/schemas/release_update"
      responses: 
        '200': 
          description: All the information provided was successfully updated for the specified artist's release
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/new_element"
        '400':
          description: Bad request performed by the client due to invalid parameters
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized request due to missing credentials 
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error' 
        '403':
          description: Fordibben access due to permanent restrictions
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: There is no artist / release with that identifier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags: 
        - release
      summary: DELETE one release from an artist of the API
      description: Deletes all the information of the specified release of the artist
      responses: 
        '200': 
          description: All the information provided was successfully deleted for the artist's release
        '401':
          description: Unauthorized request due to missing credentials 
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error' 
        '403':
          description: Fordibben access due to permanent restrictions
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: There is no artist / release with that identifier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /artist/{id}/recording:
    parameters: 
      - $ref: "#/components/parameters/id"
    get:
      tags:
        - recording
      summary: GET all the recordings of one artist of the API 
      description: Retreives all the information of the available recordings of an artist
      responses:
        "200":
          description: All the information of the recordings was successfully retreived
          content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/recordings'
        '404':
          description: There is no artist with that identifier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "500":
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"    
  /artist/{id}/recording/{id}:
    parameters:
      - $ref: "#/components/parameters/id"
    get:
      tags: 
        - recording
      summary: GET a recording from a specific artist of the API
      description: Retreives all the information of one recording from an artist
      responses:
        "200":
          description: All the information of a recording from the specified artist was successfully retreived
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/recording'
        '404':
          description: There is no artist / recording with that identifier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /artist/{id}/release/{id}/recording:
    parameters: 
      - $ref: "#/components/parameters/id"
    get:
      tags:
        - recording
      summary: GET all the recordings of one release of an artist of the API 
      description: Retreives all the information of the available recordings of an artist's release
      responses:
        "200":
          description: All the information of the recordings was successfully retreived
          content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/recordings'
        '404':
          description: There is no artist / release with that identifier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "500":
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /artist/{id}/release/{id}/recording/{id}:
    parameters:
      - $ref: "#/components/parameters/id"
    get:
      tags: 
        - recording
      summary: GET a recording from a specific artist's release of the API
      description: Retreives all the information of one recording from an artist's release
      responses:
        "200":
          description: All the information of a recording from the specified artist's release was successfully retreived
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/recording'
        '404':
          description: There is no artist / release / recording with that identifier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  parameters: 
    id: 
      description: Unique identifier for a resource
      name: id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/id"
  schemas: 
    id: 
      type: integer
      minimum: 1
      example: 1
    artists: 
      type: array
      items: 
        $ref: "#/components/schemas/artist"
      example: [
        {
        "id": 1,
        "name": "Coldplay",
        "type": "Group",
        "area": "United Kingdom",
        "begin_date": "1996-09",
        "url_release": "https://localhost/api/v3/artist/1/release",
        "url_recording": "https://localhost/api/v3/artist/1/recording"
        }, 
        {
        "id": 2,
        "name": "John Williams",
        "type": "Person",
        "gender": "Male",
        "area": "Australia",
        "begin_date": "1941-04-24",
        "url_release": "https://localhost/api/v3/artist/2/release",
        "url_recording": "https://localhost/api/v3/artist/2/recording"
        }
      ]
    artist_update:
      type: object
      properties: 
        id: 
          $ref: "#/components/schemas/id"  
        name: 
          type: string
          description: Official name of the artist, it could be a person or a band
        type: 
          type: string
          enum: ["Person", "Group", "Orchestra", "Choir"]
          description: Type which indicates whether an artist is a person, a group or something else.
        gender: 
          type: string
          enum: ["Male", "Female", "Neither"]
          description: Gender states whether a person or character identifies as a male, female or neither. Groups do not have genders. 
        area: 
          type: string
          description: Area with which an artist is identified with. Mostly, it is birth/formation country. 
        begin_date: 
          type: string
          format: date
          description: Begin date represents the date of birth or the group formation
        end_date: 
          type: string
          format: date
          description: End date represents the date of death or the group last dissolution
        url_release: 
          type: string
          format: uri
          description: URI to the releases of this artist
        url_recording: 
          type: string
          format: uri
          description: URI to the recordings of this artist
      additionalProperties: false
      example: {
        "type": "Choir"
      }
    artist:
      allOf:
        - required: 
          - id
          - name
          - type
          - area
          - begin_date
          - url_release
          - url_recording
        - $ref: "#/components/schemas/artist_update"
      example: {
        "id": 1,
        "name": "Coldplay",
        "type": "Group",
        "area": "United Kingdom",
        "begin_date": "1996-09",
        "url_release": "https://localhost/api/v3/artist/1/release",
        "url_recording": "https://localhost/api/v3/artist/1/recording"
      }
    releases:
      type: array
      items: 
        $ref: "#/components/schemas/release"
      example: [
        {
        "id": 1,
        "title": "Parachutes",
        "artist": "Coldplay",
        "date": "2000-07-10",
        "country": "United Kingdom",
        "label": "Parlophone",  
        "language": "en",
        "url_recording": "https://localhost/api/v3/artist/1/release/1/recording"
        }, 
        {
        "id": 2,
        "title": "A rush of blood to the head",
        "artist": "Coldplay",
        "date": "2002-08-26",
        "country": "United Kingdom",
        "label": "Parlophone",
        "language": "en",
        "url_recording": "https://localhost/api/v3/artist/1/release/2/recording"
        }
      ] 
    release_update:
      type: object
      properties: 
        id: 
          $ref: "#/components/schemas/id" 
        title: 
          type: string
          description: Official name of the release
        artist:
          type: string
          description: Official name of the artist, it could be a person or a band
        date: 
          type: string
          format: date
          description: Official date of the artist's release 
        country: 
          type: string
          description: Country of the artist's release. Mostly, it is birth/formation country. 
        label:
          type: string
          description: Label which publishes the artist's release
        language: 
          type: string
          description: Official language of the artist's release
        url_recording: 
          type: string
          format: uri
          description: URI to the recordings of this release
      example: {
        "date": "2000-08-10"
      }
    release:
      allOf:
        - required:
          - id
          - title
          - artist
          - date
          - country
          - label
          - language
          - url_recording
        - $ref: "#/components/schemas/release_update"
      additionalProperties: false
      example: {
        "id": 1,
        "title": "Parachutes",
        "artist": "Coldplay",
        "date": "2000-07-10",
        "country": "United Kingdom",
        "label": "Parlophone",
        "language": "en",
        "url_recording": "https://localhost/api/v3/artist/1/release/1/recording"
        }
    recordings:
      type: array 
      items:
        $ref: "#/components/schemas/recording"
      example: [{
        "id": 1,
        "title": "[Mamma Mia] Dancing Queen",
        "length": "4:00"
        },{
        "id": 2,
        "title": "Into the Blue",
        "length": "5:34"
        }]             
    recording:
      - required:
        - id
        - title
        - length
      example: {
        "id": 1,
        "title": "[Mamma Mia] Dancing Queen",
        "length": "4:00"
      } 
    new_element:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/id"
        url: 
          description: Link to the new element created
          type: string
          format: uri
      example: {
        "id": 1,
        "url": "https://localhost/api/v3/artist/1"
      }
    error:
      type: object
      properties:
        error:
          type: string
          enum: ["Bad request", "Unauthorized", "Fordibben", "Not Found", "Internal Server Error"]
        mensaje: 
          type: string
          enum: ["Bad request performed by the client due to invalid parameters", 
                 "Unauthorized request due to missing credentials", 
                 "Fordibben access due to permanent restrictions",
                 "The specified resource was not found", 
                 "The server encountered an unexpected condition that prevented it from fulfilling the request"]
      required:
      - error
      - mensaje
      additionalProperties: false
      example: {
        "error": "Bad request",
        "mensaje": "Bad request performed by the client due to invalid parameters"
      }
    